# В генеалогическом древе у каждого человека, кроме родоначальника, есть ровно один родитель.
# 
# Каждом элементу дерева сопоставляется целое неотрицательное число, называемое высотой. 
# У родоначальника высота равна 0, у любого другого элемента высота на 1 больше, чем у его родителя.
# 
# Вам дано генеалогическое древо, определите высоту всех его элементов.
# 
# Входные данные
# Программа получает на вход число элементов в генеалогическом древе N. Далее следует N−1 строка, задающие родителя
# для каждого элемента древа, кроме родоначальника. Каждая строка имеет вид имя_потомка имя_родителя.
# 
# Выходные данные
# Программа должна вывести список всех элементов древа в лексикографическом порядке. После вывода имени каждого 
# элемента необходимо вывести его высоту.
# 
# Примечание
# Эта задача имеет решение сложности O(n), но вам достаточно написать решение сложности O(n2) (не считая сложности 
# обращения к элементам словаря).
# 
# Пример ниже соответствует приведенному древу рода Романовых.
# 
# Примеры
# входные данные
# 9
# Alexei Peter_I
# Anna Peter_I
# Elizabeth Peter_I
# Peter_II Alexei
# Peter_III Anna
# Paul_I Peter_III
# Alexander_I Paul_I
# Nicholaus_I Paul_I
# выходные данные
# Alexander_I 4
# Alexei 1
# Anna 1
# Elizabeth 1
# Nicholaus_I 4
# Paul_I 3
# Peter_I 0
# Peter_II 2
# Peter_III 2


def h1(m):
    if m not in tr:
        return 0
    else:
        return 1 + h1(tr[m])


tr = {}
n = int(input())
for i in range(n - 1):
    c, p = input().split()
    tr[c] = p

h = {}
for m in set(tr.keys()).union(set(tr.values())):
    h[m] = h1(m)

for key, value in sorted(h.items()):
    print(key, value)
